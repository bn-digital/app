---
name: Production Deployment
on:
  push:
    tags:
      - '*'

jobs:
  secrets:
    uses: bn-digital/vault/.github/workflows/import-secrets.yml@latest
    secrets: inherit

  build:
    needs: [ secrets ]
    uses: bn-digital/docker/.github/workflows/build-images.yml@latest
    secrets: inherit
    with:
      environment: production
      version: ${{ github.ref_name }}

# Comment this job and uncomment next one to enable deployment to vm
  deploy:
    needs: [ build ]
    uses: bn-digital/helm/.github/workflows/deploy-charts.yml@latest
    secrets: inherit
    with:
      environment: production
      secrets: |
        projects/data/${{ github.event.repository.name }}/production/digitalocean       domain          | DOMAIN ;
        projects/data/${{ github.event.repository.name }}/production/digitalocean       kubernetes      | KUBERNETES_CLUSTER ;
        projects/data/${{ github.event.repository.name }}/production/digitalocean       token           | DIGITALOCEAN_TOKEN ;
        projects/data/${{ github.event.repository.name }}/production/database           password        | DATABASE_PASSWORD ;
        projects/data/${{ github.event.repository.name }}/production/database           root-password   | DATABASE_ROOT_PASSWORD ;
        projects/data/${{ github.event.repository.name }}/production/database           enabled         | DATABASE_ENABLED ;
        projects/data/${{ github.event.repository.name }}/production/database           database        | DATABASE_NAME ;
        projects/data/${{ github.event.repository.name }}/production/database           username        | DATABASE_USERNAME ;
      helmRef: optimize-delivery
      nodePool: production

#  deploy:
#    needs: [ build ]
#    runs-on: self-hosted
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v4
#
#      - name: Import Vault secrets
#        uses: hashicorp/vault-action@v2.5.0
#        with:
#          url: ${{ secrets.VAULT_ENDPOINT }}
#          token: ${{ secrets.VAULT_TOKEN }}
#          secrets: |
#            projects/data/${{ github.event.repository.name }}/production/vm     host        | HOST ;
#            projects/data/${{ github.event.repository.name }}/production/vm     username    | USERNAME ;
#            projects/data/${{ github.event.repository.name }}/production/vm     password    | PASSWORD;
#
#      - name: SSH into machine
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ env.HOST }}
#          username: ${{ env.USERNAME }}
#          password: ${{ env.PASSWORD }}
#          script: |
#            source .env
#            export CONTAINER_ID=$(docker ps | grep -e ${{ github.event.repository.name }}-app | awk '{print $1}')
#            docker compose stop app
#            docker compose rm app --force
#            docker rmi $CONTAINER_ID
#            export APP_VERSION=${{ github.ref_name }}
#            docker compose pull app
#            docker compose up app -d
